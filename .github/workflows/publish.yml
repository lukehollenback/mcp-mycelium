name: Publish to NPM

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Setup Python for local embeddings
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install sentence-transformers torch numpy
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run full test suite
      run: |
        npm run typecheck
        npm run lint
        npm run test:coverage
        npm test tests/performance/benchmarks.test.ts
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    
    - name: Build project
      run: npm run build

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
    
    - name: Update package.json version
      run: npm version ${{ steps.version.outputs.VERSION }} --no-git-tag-version
    
    - name: Publish to NPM
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      if: success()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.version.outputs.VERSION }}
        body: |
          ## Changes in ${{ steps.version.outputs.VERSION }}
          
          See [CHANGELOG.md](CHANGELOG.md) for detailed changes.
          
          ## Installation
          ```bash
          npm install -g mcp-mycelium@${{ steps.version.outputs.VERSION }}
          ```
          
          ## Verification
          ```bash
          mcp-mycelium --version
          ```
        draft: false
        prerelease: false

  publish-beta:
    needs: test
    runs-on: ubuntu-latest
    if: contains(github.ref, 'beta') || contains(github.ref, 'alpha') || contains(github.ref, 'rc')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
    
    - name: Update package.json version
      run: npm version ${{ steps.version.outputs.VERSION }} --no-git-tag-version
    
    - name: Publish beta to NPM
      run: npm publish --tag beta --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}